package ejercicios;

import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class algoritmos {
	public static String ejemplo1(
			Integer a, //primer elemento
			Integer b, //limite (condicion de parada)
			Function<Integer,Integer> f, //siguiente elemento
			String sp, //separador
			String pf, //prefijo <
			String sf){ //sufijo >
			
		return Stream.iterate(a, x->x<=b, x -> f.apply(x))
				
			//operaciones para hacer, dadas por el enunciado
			.map(x->x*x) //cuadrados
			.map(x->x.toString()) //pasamos a string
			.collect(Collectors.joining(sp,pf,sf)); //acumulacion
			}
	
	public static String ejemplo1_iterativo(
			Integer a, //primer elemento
			Integer b, //limite (condicion de parada)
			Function<Integer,Integer> f, //siguiente elemento
			String sp, //separador
			String pf, //prefijo <
			String sf){ //sufijo >
			
		return Stream.iterate(a, x->x<=b, x -> f.apply(x))
				
			//operaciones para hacer, dadas por el enunciado
			.map(x->x*x) //cuadrados
			.map(x->x.toString()) //pasamos a string
			.collect(Collectors.joining(sp,pf,sf)); //acumulacion
			}

}
